// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  password    String
  phoneNumber String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  CartItem    CartItem[]
  Order       Order[]
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  price       Float
  top         Boolean        @default(false)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  images      ProductImage[]
  productInfo ProductInfo?
  CartItem    CartItem[]
  OrderItem   OrderItem[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
}

model ProductInfo {
  id          Int      @id @default(autoincrement())
  description String
  brandId     Int
  typeId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  productId   Int
  product     Product  @relation(fields: [productId], references: [id])
}

model ProductBrand {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}

model Order {
  id          Int         @id @default(autoincrement())
  totalAmount Float
  status      OrderStatus
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  quantity    Int
  price       Float
  address     String
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderId     Int
  productId   Int
  product     Product  @relation(fields: [productId], references: [id])
  order       Order    @relation(fields: [orderId], references: [id])

  @@unique([orderId, productId])
}

enum OrderStatus {
  IN_PROCESS
  ON_THE_WAY
  FINISHED
}
